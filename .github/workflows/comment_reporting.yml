name: CommentReporting

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: npm install
        run: npm install

      - name: Install DFX
        run: echo -e "yes" | DFX_VERSION=0.15.0 sh -c "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Start DFX background
        run: dfx start --background

      - name: Set up dfx identity
        run: |
          rm -f ~/.config/dfx/identity/sns_uat/identity.pem
          mkdir -p ~/.config/dfx/identity/sns_uat/
          echo "$SNS_UAT_IDENT" | base64 --decode > ~/.config/dfx/identity/sns_uat/identity.pem
          echo "$SNS_UAT_WALLET" > ~/.config/dfx/identity/sns_uat/wallets.json
          dfx identity use sns_uat
          dfx identity get-principal
          dfx identity set-wallet vf5cm-vaaaa-aaaak-qcqgq-cai --network ic
        env:
          SNS_UAT_IDENT: ${{ secrets.SNS_UAT_IDENT }}
          SNS_UAT_WALLET: ${{ secrets.SNS_UAT_WALLET }}

      - name: Get Principal
        run: dfx identity get-principal

      - name: Generate canister_ids.json and canisterIds.mo
        run: |
          mkdir -p ./.dfx/local && touch ./.dfx/local/canister_ids.json
          echo '{}' > ./.dfx/local/canister_ids.json
  
          echo '{
           
            "PostCore": { "ic": "'"$POSTCORE"'" },
            "PostBucket": { "ic": "'"$POSTBUCKET"'" },
          }' > canister_ids.json
          
        env:
          POSTCORE: ${{ secrets.SNS_UAT_POST_CORE }}
          POSTBUCKET: ${{ secrets.SNS_UAT_POST_BUCKET }}
        
  
         
          
         
  
         

      - name: Get All Post Canisters
        #id: check_cycles
        run: |
            dfx canister call --network ic PostCore getAllBuckets
      #     BALANCE=$(dfx canister --network ic call CyclesDispenser getStatus -qq | tr -d '\r\n"')
      #     echo "CYCLES_BALANCE=$BALANCE" >> $GITHUB_ENV
      # - name: Notify Slack
      #   run: |
      #     CURRENT_HOUR=$(date +"%H")
      #     SLACK_WEBHOOK_URL="https://hooks.slack.com/services/${{ secrets.SLACK_WEBHOOK_KEY }}"
      #     MESSAGE="Cycles Dispenser Status: ${{ env.CYCLES_BALANCE }}"
      #     MESSAGE_CLEANED=$(echo "$MESSAGE" | sed 's/[(),]//g')
      #     # Check if the message contains 'Everything is fine' and it's not the first hour of the day
      #     if [[ "$MESSAGE_CLEANED" != *"Everything is fine"* ]] || [[ "$CURRENT_HOUR" == "00" ]]; then
      #       curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${MESSAGE_CLEANED}\"}" $SLACK_WEBHOOK_URL
      #     fi
