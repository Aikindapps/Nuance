name: CommentReporting

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: npm install
        run: npm install

      - name: Install DFX
        run: echo -e "yes" | DFX_VERSION=0.15.0 sh -c "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Start DFX background
        run: dfx start --background

      - name: Set up dfx identity
        run: |
          rm -f ~/.config/dfx/identity/UAT/identity.pem
          mkdir -p ~/.config/dfx/identity/UAT/
          echo "$UAT_IDENT" | base64 --decode > ~/.config/dfx/identity/UAT/identity.pem
          echo "$UAT_WALLET" > ~/.config/dfx/identity/uat/wallets.json
          dfx identity use UAT
          dfx identity get-principal
          dfx identity set-wallet vf5cm-vaaaa-aaaak-qcqgq-cai --network ic
        env:
          UAT_IDENT: ${{ secrets.UAT_IDENT }}
          UAT_WALLET: ${{ secrets.UAT_WALLET }}

      - name: Get Principal
        run: dfx identity get-principal

      - name: Generate canister_ids.json and canisterIds.mo
        run: |
          mkdir -p ./.dfx/local && touch ./.dfx/local/canister_ids.json
          echo '{}' > ./.dfx/local/canister_ids.json
          echo '{
            "PostCore": { "ic": "'"$POSTCORE"'" },
            "PostBucket": { "ic": "'"$POSTBUCKET"'" }
          }' > canister_ids.json
        env:
          POSTCORE: ${{ secrets.UAT_POST_CORE }}
          POSTBUCKET: ${{ secrets.UAT_POST_BUCKET }}

      - name: Report Comments to Slack
        run: |
          echo "Fetching buckets..."
          BUCKETS_RAW=$(dfx canister call --network ic PostCore getAllBuckets --candid src/declarations/PostBucket/PostBucket.did -qq)
          BUCKETS=$(echo "$BUCKETS_RAW" | grep -oE '[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{3}' || echo '')
          echo "Buckets: $BUCKETS"

          SLACK_PAYLOAD='{"text":"*Comments Pending Review:*\n'
          for BUCKET in $BUCKETS
          do
            COMMENT_IDS_RAW=$(dfx canister call --network ic $BUCKET getReportedCommentIds --candid src/declarations/PostBucket/PostBucket.did -qq)
            COMMENT_IDS=$(echo "$COMMENT_IDS_RAW" | grep -oP '(?<=\")\d+(?=\")')
            echo "Comment IDs for bucket $BUCKET: $COMMENT_IDS"

            for ID in $COMMENT_IDS; do
              ARGUMENT='("'$ID'")'
              COMMENT_URL_RAW=$(dfx canister call --network ic $BUCKET buildCommentUrl $ARGUMENT --candid src/declarations/PostBucket/PostBucket.did -qq)
              COMMENT_URL_CLEANED=$(echo $COMMENT_URL_RAW | tr -d '()"' | tr -d '\n')
              COMMENT_URL="https://https://3e6ni-fyaaa-aaaaf-qagiq-cai.ic0.app$COMMENT_URL_CLEANED"
              SLACK_PAYLOAD+="Comment ID: $ID, URL: $COMMENT_URL\n"
            done
          done
          SLACK_PAYLOAD+='"}'
          echo "Sending the following payload to Slack:"
          echo "$SLACK_PAYLOAD"
          curl -X POST -H 'Content-type: application/json' --data "$SLACK_PAYLOAD" ${{ secrets.COMMENT_BOT_WEBHOOK }}
        env:
          COMMENT_BOT_WEBHOOK: ${{ secrets.COMMENT_BOT_WEBHOOK }}
