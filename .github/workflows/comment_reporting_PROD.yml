name: Comment Reporting PROD

on:
  schedule:
    - cron: '0 * * * *'
# on:
#   workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: npm install
        run: npm install

      - name: Install DFX
        run: echo -e "yes" | DFX_VERSION=0.15.0 sh -c "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Start DFX background
        run: dfx start --background

      - name: Set up dfx identity
        run: |
          sudo apt-get install -y jq
          rm -f ~/.config/dfx/identity/prod/identity.pem
          mkdir -p ~/.config/dfx/identity/prod/
          echo "$PROD_IDENT" | base64 --decode > ~/.config/dfx/identity/prod/identity.pem
          echo '{}' | jq --arg wallet "$PROD_WALLET" '.identities.prod.ic = $wallet' > ~/.config/dfx/identity/prod/wallets.json
          dfx identity use prod
          dfx identity get-principal
          dfx identity set-wallet "$PROD_WALLET" --network ic
        env:
          PROD_IDENT: ${{ secrets.PROD_IDENT }}
          PROD_WALLET: ${{ secrets.PROD_WALLET }}

      - name: Report Comments to Slack
        run: |
          echo "Fetching buckets..."
          BUCKETS_RAW=$(dfx canister call --network ic PostCore getAllBuckets --candid src/declarations/PostBucket/PostBucket.did -qq)
          echo "Raw Buckets Output: $BUCKETS_RAW"
          BUCKETS=$(echo "$BUCKETS_RAW" | grep -oP '"\K[a-z0-9-]+(?=";)' || echo '')
          echo "Buckets: $BUCKETS"

          if [ -z "$BUCKETS" ]; then
            echo "No buckets found. Exiting."
            exit 0
          fi

          SLACK_PAYLOAD='{"text":"*Comments Pending Review:*\n'
          COMMENTS_FOUND=false
          for BUCKET in $BUCKETS
          do
            echo "Fetching comment IDs for bucket: $BUCKET"
            COMMENT_IDS_RAW=$(dfx canister call --network ic $BUCKET getReportedCommentIds --candid src/declarations/PostBucket/PostBucket.did -qq)
            if [ $? -ne 0 ]; then
              echo "Error fetching comment IDs for bucket $BUCKET"
              continue
            fi
            echo "Raw Comment IDs Output: $COMMENT_IDS_RAW"
            COMMENT_IDS=$(echo "$COMMENT_IDS_RAW" | grep -oP '(?<=\")\d+(?=\")' || echo '')
            if [ -z "$COMMENT_IDS" ]; then
              echo "No reported comments in bucket $BUCKET."
              continue
            fi
            echo "Comment IDs for bucket $BUCKET: $COMMENT_IDS"

            for ID in $COMMENT_IDS; do
              COMMENTS_FOUND=true
              ARGUMENT='("'$ID'")'
              COMMENT_URL_RAW=$(dfx canister call --network ic $BUCKET buildCommentUrl $ARGUMENT --candid src/declarations/PostBucket/PostBucket.did -qq)
              if [ $? -ne 0 ]; then
                echo "Error building comment URL for comment ID $ID in bucket $BUCKET"
                continue
              fi
              COMMENT_URL_CLEANED=$(echo $COMMENT_URL_RAW | tr -d '()"' | tr -d '\n' | tr -d ' ')
              COMMENT_URL="https://nuance.xyz$COMMENT_URL_CLEANED"
              SLACK_PAYLOAD+="Comment ID: $ID, URL: $COMMENT_URL\n"
            done
          done
          SLACK_PAYLOAD+='"}'

          # Time check for sending notification
          CURRENT_HOUR=$(date -u +"%H")
          if [ "$COMMENTS_FOUND" = true ]; then
            echo "Sending the following payload to Slack:"
            echo "$SLACK_PAYLOAD"
            curl -X POST -H 'Content-type: application/json' --data "$SLACK_PAYLOAD" ${{ secrets.COMMENT_BOT_WEBHOOK }}
            if [ $? -ne 0 ]; then
              echo "Error sending payload to Slack"
              exit 1
            fi
          elif [ "$CURRENT_HOUR" = "00" ]; then
            # It's midnight UTC, and no comments are found, send notification
            echo "No comments to review. Sending daily notification to Slack."
            SLACK_PAYLOAD='{"text":"Daily check in. No new comments reported."}'
            curl -X POST -H 'Content-type: application/json' --data "$SLACK_PAYLOAD" ${{ secrets.COMMENT_BOT_WEBHOOK }}
          else
            echo "No comments to review. Not time for daily notification."
          fi
        env:
          COMMENT_BOT_WEBHOOK: ${{ secrets.COMMENT_BOT_WEBHOOK }}
