name: Daily Report

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Install DFX
        run: |
          echo -e "yes" | DFX_VERSION=0.15.0 sh -c "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
          dfx start --background

      - name: Set Up DFX Identity
        run: |
          sudo apt-get install -y jq
          rm -f ~/.config/dfx/identity/prod/identity.pem
          mkdir -p ~/.config/dfx/identity/prod/
          echo "$PROD_IDENT" | base64 --decode > ~/.config/dfx/identity/prod/identity.pem
          echo '{}' | jq --arg wallet "$PROD_WALLET" '.identities.prod.ic = $wallet' > ~/.config/dfx/identity/prod/wallets.json
          dfx identity use prod
          dfx identity get-principal
          dfx identity set-wallet "$PROD_WALLET" --network ic
        env:
          PROD_IDENT: ${{ secrets.PROD_IDENT }}
          PROD_WALLET: ${{ secrets.PROD_WALLET }}

      - name: Get Principal
        run: dfx identity get-principal

      - name: Check Cycles Dispenser
        run: |
          BALANCE=$(dfx canister --network ic call CyclesDispenser getStatus -qq | tr -d '\r\n"')
          echo "CYCLES_BALANCE=$BALANCE" >> $GITHUB_ENV

      - name: Get Post Metrics 24hrs
        run: |
          METRICS_RAW=$(dfx canister call --network ic PostCore getPostsPerHourLast24Hours -qq)
          echo "Raw Metrics Data: $METRICS_RAW"
          METRICS=$(node .github/workflows/utils/parseMetrics.js "$METRICS_RAW" "posts")
          echo "Formatted Metrics: $METRICS"
          METRICS_CLEAN=$(echo "$METRICS" | tr -d '\r\n' | sed 's/[^[:alnum:][:space:].,]//g')
          echo "METRICS=$METRICS_CLEAN" >> $GITHUB_ENV
        shell: /usr/bin/bash -e {0}

      - name: Get Post Views 24hrs
        run: |
          POST_VIEWS_RAW=$(dfx canister call --network ic PostCore getPostViewsPerHourLast24Hours -qq)
          POST_VIEWS=$(node .github/workflows/utils/parseMetrics.js "$POST_VIEWS_RAW" "views")
          echo "POST_VIEWS=$POST_VIEWS" >> $GITHUB_ENV

      - name: Notify Slack
        run: |
          SLACK_WEBHOOK_URL="https://hooks.slack.com/services/${{ secrets.TEST_SLACK_KEY }}"
          MESSAGE="Cycles Dispenser Status: ${{ env.CYCLES_BALANCE }}\nPost Metrics: ${{ env.METRICS }}\nPost Views: ${{ env.POST_VIEWS }}"
          MESSAGE_CLEANED=$(echo "$MESSAGE" | sed 's/[(),]//g')
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${MESSAGE_CLEANED}\"}" $SLACK_WEBHOOK_URL
