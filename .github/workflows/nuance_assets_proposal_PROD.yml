# Run only after assets are commited to the asset canister by a developer with prepare permissions.

name: Nuance assets upgrade proposal

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to commit'
        required: true
      batchId:
        description: 'Batch ID'
        required: true
      evidence:
        description: 'Evidence'
        required: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Verify branch
        run: |
          if [ "${{ github.ref }}" != "refs/tags/${{ github.event.inputs.branch }}" ]; then
            echo "Error: The current branch does not match the input branch."
            exit 1
          fi

      - name: npm install
        run: npm install

      - name: Install dfx
        uses: dfinity/setup-dfx@main
      - name: Confirm successful installation
        run: |
          dfxvm install 0.22.0
          dfxvm default 0.22.0
          dfx --version

      - name: Install Quill
        run: |
          mkdir scripts/sns/install/bin
          bash scripts/sns/install/install.sh
          bash scripts/sns/install/move.sh

      - name: Install didc
        run: |
          bash ./scripts/InstallDidc.sh

      - name: Start DFX background
        run: dfx start --background

      - name: Set up dfx identity
        run: |
          sudo apt-get install -y jq
          rm -f ~/.config/dfx/identity/prod/identity.pem
          mkdir -p ~/.config/dfx/identity/prod/
          echo "$PROD_IDENT" | base64 --decode > ~/.config/dfx/identity/prod/identity.pem
          echo '{}' | jq --arg wallet "$PROD_WALLET" '.identities.prod.ic = $wallet' > ~/.config/dfx/identity/prod/wallets.json
          dfx identity use prod
          dfx identity get-principal
          dfx identity set-wallet "$PROD_WALLET" --network ic
        env:
          PROD_IDENT: ${{ secrets.PROD_IDENT }}
          PROD_WALLET: ${{ secrets.PROD_WALLET }}

      - name: Get Principal
        run: dfx identity get-principal

      - name: Create commit Proposal
        run: |
          echo "${{ secrets.PROD_IDENT }}" | base64 --decode > identity.pem
          node scripts/sns/assetCanisterUpgrade.js --functionId=1010 --developerNeuronId=${{ secrets.PROD_NEURON_ID }} --pemFilePath=./identity.pem --batchId=${{ github.event.inputs.batchId }} --evidence=${{ github.event.inputs.evidence }}
