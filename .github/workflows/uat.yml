name: Deploy UAT

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: npm install
        run: npm install

      - name: Install dfx
        uses: dfinity/setup-dfx@main

      - name: Confirm successful installation
        run: |
          dfx --version
          dfxvm install 0.17.0
          dfxvm default 0.17.0

      - name: Start DFX background
        run: dfx start --background

      - name: Set up dfx identity
        run: |
          IDENTITY_DIR="$HOME/.config/dfx/identity/uat"
          rm -rf "${IDENTITY_DIR}" 
          mkdir -p "${IDENTITY_DIR}"
          echo "${UAT_IDENT}" | base64 --decode > "${IDENTITY_DIR}/identity.pem"
          # echo "${UAT_WALLET}" > "${IDENTITY_DIR}/wallets.json"
          dfx identity use uat
          dfx identity get-principal
          dfx identity set-wallet pmba3-piaaa-aaaal-adawa-cai --network ic
        env:
          UAT_IDENT: ${{ secrets.UAT_IDENT }}
          UAT_WALLET: ${{ secrets.UAT_WALLET }}

      - name: Get Principal
        run: dfx identity get-principal

      - name: Create .env file
        run: |
          cat << EOF > .env
          II_PROVIDER_URL="https://identity.ic0.app/#authorize"
          II_PROVIDER_USE_FAKE="false"
          II_SESSION_TIMEOUT="480"
          II_INACTIVITY_TIMEOUT="480"
          UAT_FRONTEND_CANISTER_ID="${{ secrets.UAT_NUANCE_ASSETS }}"
          USERGEEK_API_KEY="${{ secrets.USERGEEK_API_KEY }}"
          USERGEEK_API_KEY_SECONDARY="${{ secrets.USERGEEK_API_KEY_SECONDARY }}"
          FASTBLOCKS_MAILERLITE_API_KEY="${{ secrets.FASTBLOCKS_MAILERLITE_API_KEY }}"
          DFX_NETWORK="ic"
          PUBLICATIONS_REPO_PATH=./Nuance-NFTs-and-Publications
          NUANCE_MAIN_REPO_PATH=./
          EOF

      - name: Generate canister_ids.json and canisterIds.mo
        run: |
          mkdir -p ./.dfx/local && touch ./.dfx/local/canister_ids.json
          echo '{}' > ./.dfx/local/canister_ids.json
          echo '{
            "FastBlocks_EmailOptIn": { "ic": "'"$FASTBLOCKS_EMAILOPTIN"'" },
            "KinicEndpoint": { "ic": "'"$KINICENDPOINT"'" },
            "CyclesDispenser": { "ic": "'"$CYCLESDISPENSER"'" },
            "PostIndex": { "ic": "'"$POSTINDEX"'" },
            "Storage": { "ic": "'"$STORAGE"'" },
            "User": { "ic": "'"$USER"'" },
            "nuance_assets": { "ic": "'"$NUANCE_ASSETS"'" },
            "PostCore": { "ic": "'"$POSTCORE"'" },
            "PostBucket": { "ic": "'"$POSTBUCKET"'" },
            "Metrics": { "ic": "'"$METRICS"'" },
            "Notifications": { "ic": "'"$NOTIFICATIONS"'",
            "Subscription": { "ic": "'"$SUBSCRIPTION"'" }
          }' > canister_ids.json
          echo '{
            "governance_canister_id": "'"$GOVERNANCE_CANISTER_ID"'",
            "index_canister_id": "'"$INDEX_CANISTER_ID"'",
            "ledger_canister_id": "'"$LEDGER_CANISTER_ID"'",
            "root_canister_id": "'"$ROOT_CANISTER_ID"'",
            "swap_canister_id": "'"$SWAP_CANISTER_ID"'"
          }' > sns_canister_ids.json

          echo '{
            "NftFactory": {
              "ic": "'"$NFTFACTORY"'"
            },
            "PublicationManagement": {
              "ic": "'"$PUBLICATIONMANAGEMENT"'"
            },
            "Publisher": {
              "ic": "'"$PUBLISHER"'"
            }
          }' > ./Nuance-NFTs-and-Publications/canister_ids.json
          echo 'module {
            public let USER_CANISTER_ID = "'"$USER"'";
            public let POST_CORE_CANISTER_ID = "'"$POSTCORE"'";
            public let KINIC_ENDPOINT_CANISTER_ID = "'"$KINICENDPOINT"'";
            public let FASTBLOCKS_EMAIL_OPT_IN_CANISTER_ID = "'"$FASTBLOCKS_EMAILOPTIN"'";
            public let POST_INDEX_CANISTER_ID = "'"$POSTINDEX"'";
            public let STORAGE_CANISTER_ID = "'"$STORAGE"'";
            public let CYCLES_DISPENSER_CANISTER_ID = "'"$CYCLESDISPENSER"'";
            public let NUANCE_ASSETS_CANISTER_ID = "'"$NUANCE_ASSETS"'";
            public let METRICS_CANISTER_ID = "'"$METRICS"'";
            public let NFT_FACTORY_CANISTER_ID = "'"$NFTFACTORY"'";
            public let PUBLICATION_MANAGEMENT_CANISTER_ID = "'"$PUBLICATIONMANAGEMENT"'";
            public let PUBLISHER_CANISTER_ID = "'"$PUBLISHER"'";
            public let NOTIFICATIONS_CANISTER_ID = "'"$NOTIFICATIONS"'";
            public let SUBSCRIPTION_CANISTER_ID = "'"$SUBSCRIPTION"'";
          };' > src/shared/canisterIds.mo

        env:
          FASTBLOCKS_EMAILOPTIN: ${{ secrets.UAT_FASTBLOCKS_EMAILOPTIN }}
          KINICENDPOINT: ${{ secrets.UAT_KINICENDPOINT }}
          CYCLESDISPENSER: ${{ secrets.UAT_CYCLESDISPENSER }}
          POSTINDEX: ${{ secrets.UAT_POSTINDEX }}
          STORAGE: ${{ secrets.UAT_STORAGE }}
          USER: ${{ secrets.UAT_USER }}
          NUANCE_ASSETS: ${{ secrets.UAT_NUANCE_ASSETS }}
          POSTCORE: ${{ secrets.UAT_POSTCORE }}
          POSTBUCKET: ${{ secrets.UAT_POST_BUCKET }}
          METRICS: ${{ secrets.UAT_METRICS }}
          NFTFACTORY: ${{ secrets.UAT_NFTFACTORY }}
          PUBLICATIONMANAGEMENT: ${{ secrets.UAT_PUBLICATIONMANAGEMENT }}
          PUBLISHER: ${{ secrets.UAT_PUBLISHER }}
          NOTIFICATIONS: ${{ secrets.UAT_NOTIFICATIONS }}
          SUBSCRIPTION: ${{ secrets.UAT_SUBSCRIPTION }}

      - name: Generate canister_ids.json in for NFTs and Publications
        run: |
          cd ./Nuance-NFTs-and-Publications
            wget https://github.com/dfinity/vessel/releases/download/v0.6.4/vessel-linux64
            mv vessel-linux64 vessel
            chmod +x vessel
            mv vessel /usr/local/bin/.
            vessel --version

      - name: Deploy UAT --network ic
        run: bash ./scripts/deployment/UAT_Deploy.sh
