name: CyclesDispenser and Proposal Notification

# on:
#   schedule:
#     - cron: '0 * * * *'
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: npm install
        run: npm install

      - name: Install DFX
        run: echo -e "yes" | DFX_VERSION=0.15.0 sh -c "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Start DFX background
        run: dfx start --background

      - name: Set up dfx identity
        run: |
          sudo apt-get install -y jq
          rm -f ~/.config/dfx/identity/prod/identity.pem
          mkdir -p ~/.config/dfx/identity/prod/
          echo "$PROD_IDENT" | base64 --decode > ~/.config/dfx/identity/prod/identity.pem
          echo '{}' | jq --arg wallet "$PROD_WALLET" '.identities.prod.ic = $wallet' > ~/.config/dfx/identity/prod/wallets.json
          dfx identity use prod
          dfx identity get-principal
          dfx identity set-wallet "$PROD_WALLET" --network ic
        env:
          PROD_IDENT: ${{ secrets.PROD_IDENT }}
          PROD_WALLET: ${{ secrets.PROD_WALLET }}

      - name: Get Principal
        run: dfx identity get-principal

      - name: Check Cycles Dispenser
        id: check_cycles
        run: |
          BALANCE=$(dfx canister --network ic call CyclesDispenser getStatus -qq | tr -d '\r\n"')
          echo "CYCLES_BALANCE=$BALANCE" >> $GITHUB_ENV

      - name: Notify Slack - Cycles Dispenser
        run: |
          CURRENT_HOUR=$(date +"%H")
          SLACK_WEBHOOK_URL="https://hooks.slack.com/services/${{ secrets.TEST_SLACK_KEY }}"
          MESSAGE="Cycles Dispenser Status: ${{ env.CYCLES_BALANCE }}"

          MESSAGE_CLEANED=$(echo "$MESSAGE" | sed 's/[(),]//g')

          if [[ "$MESSAGE_CLEANED" != *"this is a test"* ]]; then
            curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${MESSAGE_CLEANED}\"}" $SLACK_WEBHOOK_URL
          fi

      - name: List Proposals
        id: list_proposals
        run: |
          PROPOSALS_OUTPUT=$(dfx canister call --network ic rqch6-oaaaa-aaaaq-aabta-cai list_proposals \
          '(record {include_reward_status = vec {}; before_proposal = null; limit = 100 : nat32; exclude_type = vec {}; include_status = vec {1 : int32}})' \
          --candid ./.github/workflows/candid/sns_gov.did -qq)
          echo "$PROPOSALS_OUTPUT" > proposals_output.txt

      - name: Parse Proposals Output
        run: node .github/workflows/utils/parseProposals.js proposals_output.txt
        id: parse_proposals

      - name: Notify Slack - Unfamiliar Proposals
        if: ${{ steps.parse_proposals.outputs.unfamiliar_count }} > 0
        run: |
          SLACK_WEBHOOK_URL_PROPOSALS="https://hooks.slack.com/services/${{ secrets.TEST_SLACK_KEY }}"
          UNFAMILIAR_COUNT=${{ steps.parse_proposals.outputs.unfamiliar_count }}
          MESSAGE_PROPOSALS="Alert: $UNFAMILIAR_COUNT unfamiliar proposals detected."
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$MESSAGE_PROPOSALS\"}" $SLACK_WEBHOOK_URL_PROPOSALS
